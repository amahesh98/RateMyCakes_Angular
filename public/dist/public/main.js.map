{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cake-review/cake-review.component.css","webpack:///./src/app/cake-review/cake-review.component.html","webpack:///./src/app/cake-review/cake-review.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"div.allCakes{\\n    max-width:1200px;\\n    height:500px;\\n    overflow:scroll;\\n    border:1px solid black;\\n    margin:auto;\\n    text-align: center;\\n}\\ndiv.allCakes img{\\n    width:250px;\\n    height:250px;\\n    border:8px solid salmon;\\n    margin:10px;\\n    vertical-align: top;\\n}\\nh1{\\n    text-align: center;\\n}\\nform.create{\\n    border:1px solid black;\\n    width:400px;\\n    margin:auto;\\n}\\nform.create h2{\\n    text-align: center;\\n}\\nform.create input{\\n    width:300px;\\n    font-size:14pt;\\n    display:block;\\n    margin:auto;\\n}\\nform.create input.turnin{\\n    width:150px;\\n}\\ndiv.cake{\\n    display:inline-block;\\n    width:290px;\\n}\\ndiv.cake form textarea{\\n    resize: none;\\n    width:230px;\\n    height:40px;\\n}\\ndiv.cake form p{\\n    margin:5px;\\n}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<p>Response:</p>\\n<p>{{response | json }}</p>\\n<form class='create' (submit)='createCake()'>\\n  <h2>Create a new Cake!</h2>\\n  <p>{{newCake | json}}</p>\\n  <p>Baker Name:</p>\\n  <input type='text' name='baker' [(ngModel)]='newCake.baker' placeholder='baker'>\\n  <p>Image Path:</p>\\n  <input type='text' name='imagePath' [(ngModel)]='newCake.imagePath' placeholder='image path'><br>\\n  <input type='submit' class='turnin' value='SUBMIT'>\\n</form>\\n<h1>All Cakes</h1>\\n<div class='allCakes'>\\n  <div *ngFor='let cake of cakes' class='cake'>\\n      <img src='{{cake.imagePath}}' alt='Cake Image' (click)='cakeClicked(cake._id)'>\\n      <form (submit)='createRating(cake._id)'>\\n          <p>Rating: <select name='rating' [(ngModel)]=cakeRating>\\n            <option value=1>1</option>\\n            <option value=2>2</option>\\n            <option value=3>3</option>\\n            <option value=4>4</option>\\n            <option value=5>5</option>\\n          </select></p>\\n          <p>Comment:</p>\\n          <textarea name='comment' [(ngModel)]='cakeComment'></textarea><br>\\n          <input type='submit' value='Submit'>\\n        </form>\\n  </div>\\n\\n  <!-- <img *ngFor='let cake of cakes' src='{{cake.imagePath}}' alt='Cake Image' (click)='cakeClicked(cake._id)'> -->\\n</div>\\n<app-cake-review *ngIf='selected' [cake]='showCake' [ratings]='ratings' [average]='avgRating'></app-cake-review>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from './http.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'public';\n  newCake:any\n  response:any\n  cakes=[]\n  selected:boolean\n  showCake:any\n  cakeRating:number\n  cakeComment:string\n  ratings=[]\n  avgRating=0\n  constructor(private _httpService: HttpService){\n    this.newCake={baker:'', imagePath:''}\n    this.selected=false\n    this.showCake={baker:'', imagePath:''}\n    this.cakeRating=5\n    this.cakeComment=''\n  }\n  ngOnInit(){\n    this.getAllCakes()\n  }\n  createCake(){\n    console.log(\"Creating this cake\")\n    var cakeObservable=this._httpService.createCake(this.newCake)\n    cakeObservable.subscribe(data=>{\n      this.response=data\n      this.getAllCakes()\n      this.newCake={baker:'', imagePath:''}\n    })\n    \n  }\n  getAllCakes(){\n    console.log(\"Fetching all cakes\")\n    var cakeObservable = this._httpService.fetchAllCakes()\n    cakeObservable.subscribe(data=>{\n      this.response=data\n      this.cakes=data['cakes']\n    })\n  }\n  cakeClicked(_id:String){\n    console.log('Clicked on a cake')\n    this.selected=true\n    var cakeObservable=this._httpService.getOneCake(_id)\n    cakeObservable.subscribe(data=>{\n      this.response=data\n      if(data['success']==1){\n        this.showCake=data['cake']\n        this.ratings=this.showCake.ratings\n        var sum=0\n        for(var i=0; i<this.ratings.length; i++){\n          sum+=this.ratings[i].rating\n        }\n        this.avgRating=sum/this.ratings.length\n      }\n    })\n  }\n  createRating(_id){\n    var observable=this._httpService.createRating(_id, this.cakeRating, this.cakeComment)\n    observable.subscribe(data=>{\n      this.response=data\n      this.cakeComment=''\n      this.cakeRating=5\n    })\n    console.log(\"Creating rating\")\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpService } from './http.service'\nimport { HttpClientModule } from '@angular/common/http'\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\nimport { CakeReviewComponent } from './cake-review/cake-review.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CakeReviewComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"img{\\n    width:300px;\\n    height:300px;\\n}\\ndiv.reviewBox{\\n    border:1px solid black;\\n    margin:20px;\\n    height:430px;\\n    overflow: scroll;\\n}\\ndiv.left{\\n    border:1px solid red;\\n    width:400px;\\n    margin:10px;\\n    display:inline-block;\\n}\\ndiv.right{\\n    display:inline-block;\\n    vertical-align: top;\\n}\\nform textarea{\\n    width:300px;\\n    height:60px;\\n    resize: none;\\n}\"","module.exports = \"<div class='reviewBox'>\\n  <div class='left'>\\n      <h1>Baked by {{cake.baker}}</h1>\\n      <img src={{cake.imagePath}} alt='cake image'>\\n  </div>\\n  <div class='right'>\\n    <h2>Reviews</h2>\\n    <h3>Average Rating: {{average}} &#9733;</h3>\\n    <div class='rating' *ngFor='let rating of ratings'>\\n      <p>{{rating.rating}} &#9733; - {{rating.comment}}</p>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-cake-review',\n  templateUrl: './cake-review.component.html',\n  styleUrls: ['./cake-review.component.css']\n})\nexport class CakeReviewComponent implements OnInit {\n  @Input() cake={}\n  @Input() ratings=[]\n  @Input() average=-1\n  constructor() { }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private _http: HttpClient) { }\n  createCake(newCake){\n    return this._http.post('/cakes', newCake)\n  }\n  fetchAllCakes(){\n    return this._http.get('/cakes')\n  }\n  getOneCake(_id){\n    return this._http.get(`/cakes/${_id}`)\n  }\n  createRating(_id, rating, comment){\n    return this._http.post('/rating', {cakeID:_id, rating:rating, comment:comment})\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}